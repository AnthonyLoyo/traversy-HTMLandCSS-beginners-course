* {
/* 
    The '*' asteric is used as a global selector, this means that whatever rules are set inside its curly braces, they msut be followed.
 */
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
    color: black;
}

a:hover {
    color: red;
}

a:active {
    color: green;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    margin: 0;
}

.container {
/* 
    Here we select the div that wrapped around all the elements with the class tag of ' class="container" ' and give it rules to abide by
*/
    width: 90%;
    /*
        by placing this rule on our container div we are essentially telling it to give every element inside the container div a max width of 90% of the available 100% in the body element
    */
    margin: auto;
    /*
        margin auto can be used to horizontally center the element whithin its container. The element will take up its specific width and the remaining space will be split equally. 
    */
}
 
.clr {
    clear: both;
}

.box-1 {
    background-color: #333333;
    color: whitesmoke;
    border: 1px red solid;
    /*
        Every element comes with a little bit of border. we use the rule border to be ble to see it.
    */
    padding: 5%;
    /*
        In this example we use padding 5% to give the element a 5% padding on all 4 sides.
    */
}

.box-1 h1 {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: 800;
    font-style: italic;
}
.box-2 {
    border: 3px dotted #ccc;
    padding: 20px;
    margin: 20px 0;
    /*
        we gave box 2 a margin of 20px. the margin creates space between the element on top and on the bottom of it.
    */
}
.categories {
    border: 1px green solid;
    padding: 10px;
    border-radius: 25px;
    /*
        The 'border-radius' rule creates a rounded corner for our div element.
    */
}
.categories h2{
    text-align: center;
}

.categories ul{
    color: yellow;
    padding: 0;
    list-style: none;
}
.categories li {
    padding-bottom: 6px;
    border-bottom: dotted 1px #333;
}
.block {
    color: blue;
    float: left;
    width: 33.3%;
    border: 1px solid purple;
    padding: 10px;
    box-sizing: border-box;
    /* 
        What border box does is take the padding and border add it together and from size it correctly to fit inside the width given of 33.3%. 

        If we dont use box-sizing: border-box; our 3 block elements beging to stack on top of each other because we dont have enough space for the padding and border which causes them to stack. 

        USING BOX-SIZING WILL BE ESENTIAL
    */
}

#main-block {
    color: firebrick;
    float: left;
    width: 70%;
}
#sidebar {
    color: fuchsia;
    float: right;
    width: 30%;
    background-color: forestgreen;
}